<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lm.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.lm.bean.User">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="family" jdbcType="VARCHAR" property="family" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>

  <!-- 登录，按姓名和密码查询 -->
  <select id="selectByUser" parameterType="com.lm.bean.User" resultMap="BaseResultMap">
    select 
    userid, name, age, sex, password, email, family, intro, time
    from user
    where name = #{name,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>

  <!--登陆，按name查询用户 ajax -->
  <select id="selectByName" parameterType="String" resultMap="BaseResultMap">
      select
      *
     from user
      where name = #{name}
  </select>

  <!-- 注册，按姓名查询 -->
  <select id="selectByUserName" parameterType="com.lm.bean.User" resultMap="BaseResultMap">
    select 
    userid, name, age, sex, password, email, family, intro, time
    from user
    where name = #{name,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询所有用户（无条件） -->
  <select id="selectByUserAll" parameterType="com.lm.bean.User" resultMap="BaseResultMap">
    select 
    u.userid, u.name, u.age, u.sex, u.password, u.email, u.family, u.intro, u.time, v.photo userphoto
    from user u left join via v on u.userid=v.userid
  </select>
  
  <!-- 按userid查询用户 -->
  <select id="selectByUserId" parameterType="com.lm.bean.User" resultMap="BaseResultMap">
	select 
    u.userid, u.name, u.age, u.sex, u.password, u.email, u.family, u.intro, u.time, v.photo userphoto
    from user u left join via v on u.userid=v.userid
    where u.userid = #{userid,jdbcType=INTEGER}
  </select>
  
  <!-- 按userid查询用户 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    u.userid, u.name, u.age, u.sex, u.password, u.email, u.family, u.intro, u.time, v.photo userphoto, count(*) attcount
    from user u left join via v on u.userid=v.userid join attention att on u.userid=att.beuserid
    where u.userid = #{userid,jdbcType=INTEGER}
  </select>
  
  <!-- 删除用户 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <!--注册插入-->
  <insert id="insert" parameterType="com.lm.bean.User">
    insert into user (userid, name, age, 
      sex, password, email, 
      family, intro, time
      )
    values (#{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{sex,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{family,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <!-- 编辑个人资料（修改user表） -->
  <update id="updateByPrimaryKey" parameterType="com.lm.bean.User">
    update user
    set age = #{age,jdbcType=INTEGER},
	    sex = #{sex,jdbcType=VARCHAR},
	    family = #{family,jdbcType=VARCHAR},
	    intro = #{intro,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  
  <!-- 基本设置信息的修改（修改user表） -->
  <update id="updateSetupByPrimaryKey" parameterType="com.lm.bean.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
	    password = #{password,jdbcType=VARCHAR},
	    email = #{email,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  
</mapper>